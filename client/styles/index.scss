@use "sass:map";
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

// scss variable control theme switching
$themes: (
    light: (
        bgColor: #fff,
        textColor: #2c2c2c
    ),
    dark: (
        bgColor: #2c2c2c,
        textColor: #ccc
    )
);
$curThemeName: "";
@mixin useTheme() {
    @each $key, $value in $themes {
        $curThemeName: $key !global;
        html[data-theme="#{$key}"] & {
            @content;
        }
    }
}

@function getVar($varName) {
    // corresponding variable values for the current topic
    $themeMap: map.get($themes, $curThemeName);
    @return map.get($themeMap, $varName);
}

%themeStyle {
    @include useTheme {
        color: getVar("textColor");
        background-color: getVar("bgColor");
    }
}
/*
 * 你好
 */
%svgThemeStyle {
    @include useTheme {
        fill: getVar("textColor");
    }
}
/*
    You can use this method to generate different theme styles
    transition: background-color 0.3s ease, color 0.3s ease;
    @include {
        color:getVar('textColor');
        background-color:getVar('bgColor');
    }
*/

// The style of the global webpage slider
::-webkit-scrollbar {
    width: 6px;
    background-color: white;
}
::-webkit-scrollbar-thumb {
    background-color: #eee;
    border-radius: 3px;
}
::-webkit-scrollbar-thumb:hover {
    background-color: #ccc;
}
